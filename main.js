(()=>{"use strict";var e=document.querySelector(".profile__edit-botton"),t=document.querySelector(".profile__add-botton"),r=(document.querySelector(".form_type_adding"),document.querySelector(".form__textinput_type_edit-full-name")),n=document.querySelector(".form__textinput_type_edit-description"),o=addingForm.querySelector(".form__submit-button_type_adding-add-button"),i={formSelector:".form__container_type_submit-form",inputSelector:".form__textinput",submitButtonSelector:".form__submit-button",errorSelector:".form_error",inactiveButtonClass:"form__submit-button_disabled",inputErrorClass:"form__textinput_type_error",errorClass:"form__error_visible"};function s(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var c=function(){function e(t){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.close=function(){r._togglePopupStatus(r._form),r._closeButton.removeEventListener("keydown",r.close),document.removeEventListener("keydown",r._handleEscClose),r._form.removeEventListener("click",r._handleClickClose)},this.setEventListeners=function(){document.addEventListener("keydown",r._handleEscClose),r._closeButton.addEventListener("click",r.close),r._form.addEventListener("click",r._handleClickClose)},this._togglePopupStatus=function(e){e.classList.toggle("form_status_active")},this._handleClickClose=function(e){e.target===e.currentTarget&&r.close()},this._handleEscClose=function(e){"Escape"===e.key&&r.close()},this._form=document.querySelector(t),this._formContainer=this._form.querySelector(".form__container"),this._closeButton=this._form.querySelector(".form__close-button"),this._submitButtom=this._form.querySelector(".form__submit-button")}var t,r;return t=e,(r=[{key:"open",value:function(){this._togglePopupStatus(this._form),this.setEventListeners()}}])&&s(t.prototype,r),e}();function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function l(e,t,r){return(l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(r):o.value}})(e,t,r||e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function _(e,t){return!t||"object"!==a(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var p=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(s,e);var t,r,n,o,i=(n=s,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(n);if(o){var r=d(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return _(this,e)});function s(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,s),(t=i.call(this,e))._viewerImg=t._form.querySelector(".form__foto-viewer-img"),t._viewerDescription=t._form.querySelector(".form__foto-viewer-description"),t}return t=s,(r=[{key:"open",value:function(e,t){this._viewerImg.setAttribute("src",t),this._viewerImg.setAttribute("alt",e),this._viewerDescription.textContent=e,l(d(s.prototype),"open",this).call(this)}}])&&u(t.prototype,r),s}(c);function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function y(e,t){return!t||"object"!==m(t)&&"function"!=typeof t?v(e):t}function v(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function b(e){return(b=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(o,e);var t,r,n=(t=o,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,n=b(t);if(r){var o=b(this).constructor;e=Reflect.construct(n,arguments,o)}else e=n.apply(this,arguments);return y(this,e)});function o(e,t){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o),(r=n.call(this,e)).close=function(){r._formContainer.reset(),r._togglePopupStatus(r._form),document.removeEventListener("keydown",r._handleEscClose),r._closeButton.removeEventListener("click",r.close),r._form.removeEventListener("click",r._handleClickClose),r._formContainer.removeEventListener("submit",r._submit)},r.setEventListeners=function(){document.addEventListener("keydown",r._handleEscClose),r._closeButton.addEventListener("click",r.close),r._form.addEventListener("click",r._handleClickClose),r._formContainer.addEventListener("submit",r._submit)},r._getInputsValues=function(){var e=r._form.querySelectorAll(".form__textinput"),t={};return e.forEach((function(e,r){t["value".concat(r)]=e.value})),t},r._submit=t.bind(v(r)),r}return o}(c);function S(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var k=function(){function e(t,r,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._selector=r,this._openViewerForm=n}var t,r;return t=e,(r=[{key:"_getTamplate",value:function(){return document.querySelector(this._selector).content.cloneNode(!0).querySelector(".gallery-item")}},{key:"_likeHandler",value:function(){var e=this;this._cardProperties.like.addEventListener("click",(function(){e._cardProperties.like.classList.toggle("gallery-item__heart-button_type_active")}))}},{key:"_deleteHandler",value:function(){var e=this;this._cardProperties.trash.addEventListener("click",(function(t){e._card.remove(),e._card=null}))}},{key:"_imgHandler",value:function(){var e=this;this._cardProperties.img.addEventListener("click",(function(){e._openViewerForm(e._name,e._link)}))}},{key:"_setEventListeners",value:function(){this._likeHandler(),this._deleteHandler(),this._imgHandler()}},{key:"generateCard",value:function(){return this._card=this._getTamplate(),this._cardProperties={img:this._card.querySelector(".gallery-item__image"),like:this._card.querySelector(".gallery-item__heart-button"),trash:this._card.querySelector(".gallery-item__trash-button"),title:this._card.querySelector(".gallery-item__title")},this._cardProperties.img.setAttribute("src","".concat(this._link)),this._cardProperties.img.setAttribute("alt","".concat(this._name)),this._cardProperties.title.textContent=this._name,this._setEventListeners(),this._card}}])&&S(t.prototype,r),e}(),E=function(e,t,r){return new k(e,t,r).generateCard()},w=function e(t,r){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._showErrorMessage=function(e,t){e.textContent=t.validationMessage,e.classList.add(n._errorClass)},this._hideErrorMessage=function(e){e.classList.remove(n._errorClass)},this._checkInputValidity=function(e,t){var r=t.validity.valid,o=e.querySelector("#".concat(t.name,"-error"));r?(n._hideErrorMessage(o),t.classList.remove(n._inputErrorClass)):(n._showErrorMessage(o,t),t.classList.add(n._inputErrorClass))},this._changeSubmitButtonStatus=function(e,t){var r=e.querySelector(n._submitButtonSelector);t.map((function(e){return e.validity.valid})).some((function(e){return!e}))?(r.classList.add(n._inactiveButtonClass),r.setAttribute("disabled",!0)):(r.classList.remove(n._inactiveButtonClass),r.removeAttribute("disabled"))},this.setEventListeners=function(e){var t=Array.from(e.querySelectorAll(n._inputSelector));t.forEach((function(r){r.addEventListener("input",(function(){n._checkInputValidity(e,r),n._changeSubmitButtonStatus(e,t)}))}))},this.enableValidation=function(){var e=document.querySelector(n._selector);e.addEventListener("submit",(function(e){e.preventDefault()})),n.setEventListeners(e)},this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._errorSelector=t.errorSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._selector=r},C=new function e(t,r){var n=this,o=t.items,i=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.addItem=function(e){n._container.prepend(e)},this.renderItems=function(){n._items.forEach((function(e){var t=n._renderer(e);n.addItem(t)}))},this._items=o,this._renderer=i,this._container=document.querySelector(r)}({items:[{name:"Архыз",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg"},{name:"Челябинская область",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg"},{name:"Иваново",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg"},{name:"Камчатка",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg"},{name:"Холмогорский район",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg"},{name:"Байкал",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg"}],renderer:function(e){return E(e,"#gallery-item",P.open.bind(P))}},".gallery"),L=new function e(t){var r=this,n=t.nameSelector,o=t.userInfoSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.getUserinfo=function(){return{fullName:r._nameSelector.textContent,userDescription:r._userInfoSelector.textContent}},this.setUserInfo=function(e){var t=e.value0,n=e.value1;r._nameSelector.textContent=t,r._userInfoSelector.textContent=n},this._nameSelector=document.querySelector(n),this._userInfoSelector=document.querySelector(o)}({nameSelector:".profile__full-name",userInfoSelector:".profile__description"}),P=new p(".form_type_foto-viewer"),q=new g(".form_type_edit",(function(){L.setUserInfo(this._getInputsValues()),this.close()})),O=new g(".form_type_adding",(function(){var e=this._getInputsValues(),t={name:e.value0,link:e.value1},r=E(t,"#gallery-item",P.open.bind(P));C.addItem(r),this.close()}));new w(i,".form__container_type_edit").enableValidation(),new w(i,".form__container_type_adding").enableValidation(),e.addEventListener("click",(function(){var e=L.getUserinfo();r.value=e.fullName,n.value=e.userDescription,q.open()})),t.addEventListener("click",(function(){o.setAttribute("disabled",!0),o.classList.add("form__submit-button_disabled"),O.open()})),C.renderItems()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,